@{
    ViewData["Title"] = "Home Page";
}

<div class="jumbotron">
    <h1 class="display-4">Home Tools</h1>
    <p class="lead">A collection of tools and links of items that are available in the home.</p>
    <hr class="my-4">
    <p>If this page isn't loading, ask Stephen to launch Docker on eLope.</p>
    <p class="lead">
        <a class="btn btn-primary btn-lg" href="#" role="button">Learn more</a>
    </p>
</div>

<div class="modal fade in" tabindex="-1" role="dialog" id="ProcessingModal" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">
                    Upload In progress
                </h4>
            </div>
            <div class="modal-body">
                <div class="col-6">
                    <ul id="progressList"></ul>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="container">
    <div class="row" hidden>
        <div class="col-4">
            <h3>SignalR Chat</h3>
            <div class="row">
                <div class="col-2">User</div>
                <div class="col-4"><input type="text" id="userInput" /></div>
            </div>
            <div class="row">
                <div class="col-2">Message</div>
                <div class="col-4"><input type="text" id="messageInput" /></div>
            </div>
            <div class="row">&nbsp;</div>
            <div class="row">
                <div class="col-6">
                    <input type="button" id="sendButton" value="Send Message" />
                </div>
            </div>
        </div>
        <div class="col-8">
            <h3>Upload Tools</h3>
            <div class="row">
                <div class="col-4">Post Test</div>
                <div class="col-4"><button class="btn btn-primary" type="button" onClick="TestClick()">Test Post</button></div>
            </div>
            <div class="row">
                <div class="col-4">File Upload Test</div>
                <div class="col-4">
                    <form action="Home/Upload"
                          enctype="multipart/form-data" onsubmit="AJAXSubmit(this);return false;"
                          method="post">
                        <dl>
                            <dt>
                                <label for="FileUpload.FormFile">File</label>
                            </dt>
                            <dd>
                                <input id="FileCount" type="text" placeholder="Enter file count" name="FileCount" />
                                <input id="FileUpload.FormFile" type="file"
                                       name="FileUpload.FormFile" />
                            </dd>
                        </dl>

                        <input class="btn btn-primary" type="submit" value="Upload" />

                        <div style="margin-top:15px">
                            <output name="result"></output>
                        </div>
                    </form>
                </div>
            </div>
        </div>

    </div>
</div>



<div class="container">
    <div class="row">
        <div class="col-4">
            <h3>Plex</h3>
            <p>
                Wanna watch some shows?
                Cool.
            </p>
            <a class="btn btn-info" href="http://192.168.187.30:32400/web/index.html#!/">Launch Plex</a>
        </div>
        <div class="col-4">
            <h3>YouTube Downloader</h3>
            <p>Need to download a show?  I gotcha covered</p>
            <a class="btn btn-info" asp-area="" asp-controller="Home" asp-action="YouTubeDownload">🚀YouTube Download🚀</a>
        </div>
        <div class="col-4">
            <h3>YouTubeStore</h3>
            <p>See what we already downloaded</p>
            <div class="container mt-4">
                <div class="form-group">
                    <label for="searchBox">Search for a Channel:</label>
                    <input type="text"
                           id="searchBox"
                           class="form-control"
                           placeholder="Type to search..."
                           oninput="getAutocompleteResults(this.value)" />
                </div>
                <ul id="autocompleteResults" class="list-group mt-2"></ul>
            </div>
        </div>
    </div>
</div>

<h3>Other links</h3>
<ul>
    <li><a class="btn btn-primary btn-sm" href="http://192.168.0.5">Office WiFi</a></li>
    <li><a class="btn btn-primary btn-sm" href="http://192.168.0.1">Living Room WiFi</a></li>
    <li><a class="btn btn-primary btn-sm" href="http://192.168.0.17">Playground WiFi</a></li>
    <li><a class="btn btn-primary btn-sm" href="http://192.168.0.200">Core Router</a></li>
    <li><a class="btn btn-primary btn-sm" href="http://192.168.1.254">Fibre AP</a></li>
</ul>

<div class="row">
    <div class="col-12">
        <hr />
    </div>
</div>
<div class="row">
    <div class="col-6">
        <ul id="messagesList"></ul>
    </div>
</div>
<script src="~/js/signalr/dist/browser/signalr.js"></script>
<script src="~/js/chat.js"></script>


<script>
    function TestClick() {
        var jqxhr = $.post("Home/PostTest", function () {
            alert("success");
        })
            .done(function () {
                alert("second success");
            })
            .fail(function () {
                alert("error");
            });
    }
</script>



<script>
    
        async function getAutocompleteResults(query) {
    const resultsContainer = document.getElementById('autocompleteResults');
        resultsContainer.innerHTML = ""; // Clear previous results

        if (!query) return; // Do nothing if the query is empty

        try {
        // Fetch results from the API
        const response = await fetch(`/api/home/autocomplete?query=${encodeURIComponent(query)}`);
        const results = await response.json();

        // Populate the results container
        results.forEach(result => {
            const li = document.createElement('li');
        li.className = "list-group-item";
        li.textContent = result.channelName;
            li.onclick = () => window.open(result.channelUrl, '_blank'); // Open URL on click
        resultsContainer.appendChild(li);
        });
    } catch (error) {
            console.error("Error fetching autocomplete results:", error);
    }
}

    async function AJAXSubmit(oFormElement) {
        var resultElement = oFormElement.elements.namedItem("result");
        const formData = new FormData(oFormElement);

        try {
            $('#ProcessingModal').modal({ backdrop: 'static', keyboard: false });
            const response = await fetch(oFormElement.action, {
                method: 'POST',
                body: formData,
                location: "Upload"
            });


            resultElement.value = 'Result: ' + response.status + ' ' +
                response.statusText;
        } catch (error) {
            console.error('Error:', error);
        }
    }
</script>


<style>
    .bg-img {
        position: relative;
        width: 100%;
        height: 100%;
        background: url("https://unsplash.it/1200x800") center center no-repeat;
        background-size: cover;
    }

        .bg-img:before {
            content: '';
            position: absolute;
            top: 0;
            right: 0;
            bottom: 0;
            left: 0;
            background-image: linear-gradient(90deg, #0099FF 0%, #6610f2 100%);
            opacity: .6;
        }
</style>